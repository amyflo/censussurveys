{"id":"node_modules/lodash/assign.js","dependencies":[{"name":"/Users/amylo/Desktop/censussurveys/package.json","includedInParent":true,"mtime":1610575928732},{"name":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/package.json","includedInParent":true,"mtime":1610575928159},{"name":"./_assignValue","loc":{"line":1,"column":26},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/assign.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_assignValue.js"},{"name":"./_copyObject","loc":{"line":2,"column":25},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/assign.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_copyObject.js"},{"name":"./_createAssigner","loc":{"line":3,"column":29},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/assign.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_createAssigner.js"},{"name":"./isArrayLike","loc":{"line":4,"column":26},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/assign.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/isArrayLike.js"},{"name":"./_isPrototype","loc":{"line":5,"column":26},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/assign.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_isPrototype.js"},{"name":"./keys","loc":{"line":6,"column":19},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/assign.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/keys.js"}],"generated":{"js":"var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/assign.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash/assign.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"node_modules/lodash/assign.js":"var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n"},"lineCount":59}},"error":null,"hash":"7362bbb1d14b8f69ff4c89a591667232","cacheData":{"env":{}}}