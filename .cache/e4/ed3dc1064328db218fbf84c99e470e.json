{"id":"qSD8","dependencies":[{"name":"/Users/amylo/Desktop/censussurveys/package.json","includedInParent":true,"mtime":1610382211092},{"name":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/package.json","includedInParent":true,"mtime":1610382210689},{"name":"./identity","loc":{"line":1,"column":23},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_baseRest.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/identity.js"},{"name":"./_overRest","loc":{"line":2,"column":23},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_baseRest.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_overRest.js"},{"name":"./_setToString","loc":{"line":3,"column":26},"parent":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_baseRest.js","resolved":"/Users/amylo/Desktop/censussurveys/node_modules/lodash/_setToString.js"}],"generated":{"js":"var e=require(\"./identity\"),r=require(\"./_overRest\"),t=require(\"./_setToString\");function i(i,u){return t(r(i,u,e),i+\"\")}module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseRest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":2,"column":0},"generated":{"line":1,"column":28}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":2,"column":0},"generated":{"line":1,"column":30}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":2,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":3,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":3,"column":0},"generated":{"line":1,"column":55}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":3,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":13,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":13,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":13,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":13,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":104}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":110}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":112}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":115}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":14,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":17,"column":0},"generated":{"line":1,"column":121}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":17,"column":0},"generated":{"line":1,"column":128}},{"source":"node_modules/lodash/_baseRest.js","original":{"line":17,"column":0},"generated":{"line":1,"column":136}}],"sources":{"node_modules/lodash/_baseRest.js":"var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n"},"lineCount":null}},"error":null,"hash":"e7475e982516b1cabcec1511cfcf5228","cacheData":{"env":{}}}